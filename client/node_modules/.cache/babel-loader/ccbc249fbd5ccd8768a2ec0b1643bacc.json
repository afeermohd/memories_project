{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afeer\\\\Documents\\\\Projects\\\\memories_project\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Avatar, Button, Paper, Grid, Typography, Container } from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Icon from \"./icon\";\nimport Input from \"./Input\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setisSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: [e.target.value]\n    });\n  };\n\n  const switchMod = () => {\n    setisSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: \"AUTH\",\n        data: {\n          result,\n          token\n        }\n      });\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google Sign In was unsuccessful. Try Again Later\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? \"Sign Up\" : \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? \"Sign Up\" : \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"537552689914-ghe6ou6n0iqe0ev59b13csm0fv33hjvv.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 28\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMod,\n              children: isSignup ? \"Already have an account? Sign In\" : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"E2bsaIkKK0IvMHG38OB25Ixaoms=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/afeer/Documents/Projects/memories_project/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","LockOutlinedIcon","GoogleLogin","useDispatch","useHistory","Icon","Input","useStyles","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignup","setisSignup","formData","setFormData","dispatch","history","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","console","log","handleChange","target","name","value","switchMod","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Icon from \"./icon\";\r\nimport Input from \"./Input\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst initialState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst Auth = () => {\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isSignup, setisSignup] = useState(false);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleShowPassword = () =>\r\n    setShowPassword((prevShowPassword) => !prevShowPassword);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(formData);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: [e.target.value] });\r\n  };\r\n\r\n  const switchMod = () => {\r\n    setisSignup((prevIsSignup) => !prevIsSignup);\r\n    handleShowPassword(false);\r\n  };\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj;\r\n    const token = res?.tokenId;\r\n\r\n    try {\r\n      dispatch({ type: \"AUTH\", data: { result, token } });\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const googleFailure = () => {\r\n    console.log(\"Google Sign In was unsuccessful. Try Again Later\");\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{isSignup ? \"Sign Up\" : \"Sign in\"}</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {isSignup && (\r\n              <>\r\n                <Input\r\n                  name=\"firstName\"\r\n                  label=\"First Name\"\r\n                  handleChange={handleChange}\r\n                  autoFocus\r\n                  half\r\n                />\r\n                <Input\r\n                  name=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  handleChange={handleChange}\r\n                  half\r\n                />\r\n              </>\r\n            )}\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              handleChange={handleChange}\r\n              type=\"email\"\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              handleChange={handleChange}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              handleShowPassword={handleShowPassword}\r\n            />\r\n            {isSignup && (\r\n              <Input\r\n                name=\"confirmPassword\"\r\n                label=\"Repeat Password\"\r\n                handleChange={handleChange}\r\n                type=\"password\"\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n          </Button>\r\n          <GoogleLogin\r\n            clientId=\"537552689914-ghe6ou6n0iqe0ev59b13csm0fv33hjvv.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <Button\r\n                className={classes.googleButton}\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                startIcon={<Icon />}\r\n                variant=\"contained\"\r\n              >\r\n                Google Sign In\r\n              </Button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button onClick={switchMod}>\r\n                {isSignup\r\n                  ? \"Already have an account? Sign In\"\r\n                  : \"Don't have an account? Sign Up\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}